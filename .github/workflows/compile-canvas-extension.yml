name: Compile Canvas Extension for Vercel

on:
  workflow_dispatch: # Allow manual trigger
  push:
    paths:
      - "extend_canvas.cpp"
      - ".github/workflows/compile-canvas-extension.yml"

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OpenCV and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            g++ \
            pkg-config \
            libopencv-dev \
            libopencv-contrib-dev \
            libjpeg-dev \
            libpng-dev \
            libtiff-dev \
            libwebp-dev \
            zlib1g-dev

      - name: Compile canvas extension
        run: |
          echo "🔨 Compiling extend_canvas for Linux with full static linking..."

          # Get OpenCV flags
          OPENCV_CFLAGS=$(pkg-config --cflags opencv4)
          OPENCV_LIBS=$(pkg-config --libs opencv4)

          echo "OpenCV CFLAGS: $OPENCV_CFLAGS"
          echo "OpenCV LIBS: $OPENCV_LIBS"

          # Try multiple static linking approaches
          echo "🔧 Attempting full static compilation..."

          # Approach 1: Full static linking
          if g++ -std=c++17 -O2 -Wall -static -o extend_canvas_linux extend_canvas.cpp \
            $OPENCV_CFLAGS $OPENCV_LIBS -lpthread -ldl; then
            echo "✅ Full static compilation successful"
          else
            echo "⚠️ Full static failed, trying partial static..."
            # Approach 2: Partial static with specific libraries
            g++ -std=c++17 -O2 -Wall -o extend_canvas_linux extend_canvas.cpp \
              $OPENCV_CFLAGS \
              -Wl,-Bstatic $OPENCV_LIBS \
              -Wl,-Bdynamic -lpthread -ldl -lm -lc
          fi

          echo "✅ Compilation completed"
          ls -la extend_canvas_linux

          # Check what libraries it depends on
          echo "📋 Library dependencies:"
          ldd extend_canvas_linux || echo "Fully static binary (no dependencies)"

          # Check binary info
          echo "📋 Binary info:"
          file extend_canvas_linux

          # Test the binary
          ./extend_canvas_linux 2>&1 | head -5

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: extend_canvas_linux
          path: extend_canvas_linux
          retention-days: 30

      - name: Display download instructions
        run: |
          echo "🎉 Binary compiled successfully!"
          echo ""
          echo "📥 To use this binary in your project:"
          echo "1. Download the artifact from this workflow run"
          echo "2. Extract extend_canvas_linux from the zip"
          echo "3. Place it in your project root"
          echo "4. Commit and push: git add extend_canvas_linux && git commit -m 'Add Linux binary' && git push"
          echo ""
          echo "🚀 The binary will then be available for Vercel deployment!"
